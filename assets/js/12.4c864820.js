(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{370:function(e,t,s){"use strict";s.r(t);var a=s(43),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"app-mesh-profile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#app-mesh-profile","aria-hidden":"true"}},[e._v("#")]),e._v(" App Mesh Profile")]),e._v(" "),s("p",[e._v("The App Mesh integration with EKS is made out of the following components:")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Kubernetes custom resources")]),e._v(" -\nmesh, virtual nodes, services and gateways")]),e._v(" "),s("li",[s("strong",[e._v("CRD controller")]),e._v(" -\nkeeps the custom resources in sync with the App Mesh control plane")]),e._v(" "),s("li",[s("strong",[e._v("Admission controller")]),e._v(" -\ninjects the Envoy sidecar and assigns pods to App Mesh virtual nodes")]),e._v(" "),s("li",[s("strong",[e._v("Envoy Gateway")]),e._v(" -\nroutes traffic from outside the cluster into the mesh")]),e._v(" "),s("li",[s("strong",[e._v("Telemetry service")]),e._v(" -\nPrometheus instance that collects and stores Envoy's metrics")]),e._v(" "),s("li",[s("strong",[e._v("Progressive delivery operator")]),e._v(" -\nFlagger instance that automates canary releases on top of App Mesh")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/gitops-appmesh.png",alt:"App Mesh Canary Release"}})]),e._v(" "),s("h2",{attrs:{id:"create-a-github-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-github-repository","aria-hidden":"true"}},[e._v("#")]),e._v(" Create a GitHub repository")]),e._v(" "),s("p",[e._v("In order to follow the guide you'll need a GitHub account and a\n"),s("a",{attrs:{href:"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line",target:"_blank",rel:"noopener noreferrer"}},[e._v("personal access token"),s("OutboundLink")],1),e._v("\nthat can create repositories (check all permissions under "),s("code",[e._v("repo")]),e._v(").")]),e._v(" "),s("p",[e._v("Fork "),s("a",{attrs:{href:"https://github.com/stefanprodan/gitops-appmesh",target:"_blank",rel:"noopener noreferrer"}},[e._v("this repository"),s("OutboundLink")],1),e._v(" on your personal GitHub account\nand export your access token, username and repo:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GITHUB_TOKEN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("YOUR_GITHUB_TOKEN\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GITHUB_USER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("YOUR_GITHUB_USERNAME\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GITHUB_REPO")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("gitops-appmesh\n")])])]),s("p",[e._v("Clone the repository on your local machine:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${GITHUB_USER}")]),e._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${GITHUB_REPO}")]),e._v(".git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${GITHUB_REPO}")]),e._v("\n")])])]),s("h2",{attrs:{id:"cluster-bootstrap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cluster-bootstrap","aria-hidden":"true"}},[e._v("#")]),e._v(" Cluster bootstrap")]),e._v(" "),s("p",[e._v("Create an EKS cluster named "),s("code",[e._v("gitops-appmesh")]),e._v(".\nNote that the region used in this lab is "),s("code",[e._v("us-west-2")]),e._v(".\nThis will take around 15 minutes:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v(" EOF "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" eksctl create cluster -f -\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\n  name: gitops-appmesh\n  region: us-west-2\nnodeGroups:\n  - name: default\n    instanceType: m5.large\n    desiredCapacity: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n    volumeSize: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("120")]),e._v("\n    iam:\n      withAddonPolicies:\n        appMesh: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n        xRay: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\nEOF\n")])])]),s("p",[e._v("The above command will create a two nodes cluster with App Mesh IAM policy attached to the EKS node instance role.")]),e._v(" "),s("p",[e._v("Verify that your EKS cluster satisfies the prerequisites with:")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ flux check --pre\n► checking prerequisites\n✔ kubectl 1.19.4 >=1.18.0\n✔ Kubernetes 1.18.9-eks-d1db3c >=1.16.0\n✔ prerequisites checks passed\n")])])]),s("p",[e._v("Install Flux on your cluster with:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("flux bootstrap github "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --owner"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${GITHUB_USER}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --repository"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${GITHUB_REPO}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("main "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --personal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("clusters/appmesh\n")])])]),s("p",[e._v("The bootstrap command commits the manifests for the Flux components in "),s("code",[e._v("clusters/appmesh/flux-system")]),e._v(" dir\nand creates a deploy key with read-only access on GitHub, so it can pull changes inside the cluster.")]),e._v(" "),s("p",[e._v("Sync your local repository:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull origin main\n")])])]),s("p",[e._v("Wait for the cluster reconciliation to finish:")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ watch flux get kustomizations \nNAME          \tREVISION                                     \tREADY\napps          \tmain/582872832315ffca8cf24232b0f6bcb942131a1f\tTrue\ncluster-addons\tmain/582872832315ffca8cf24232b0f6bcb942131a1f\tTrue\t\nflux-system   \tmain/582872832315ffca8cf24232b0f6bcb942131a1f\tTrue\t\nmesh          \tmain/582872832315ffca8cf24232b0f6bcb942131a1f\tTrue\t\nmesh-addons   \tmain/582872832315ffca8cf24232b0f6bcb942131a1f\tTrue\t\n")])])]),s("p",[e._v("Verify that Flagger, Prometheus, AppMesh controller and gateway Helm releases have been installed:")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ flux get helmreleases --all-namespaces \nNAMESPACE      \tNAME              \tREVISION\tREADY\nappmesh-gateway\tappmesh-gateway   \t0.1.5   \tTrue\nappmesh-system \tappmesh-controller\t1.2.0   \tTrue\nappmesh-system \tappmesh-prometheus\t1.0.0   \tTrue\nappmesh-system \tflagger           \t1.2.0   \tTrue\nkube-system    \tmetrics-server    \t5.0.1   \tTrue\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);